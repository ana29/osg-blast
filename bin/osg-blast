#!/usr/bin/env node

var fs = require('fs');
var path = require('path');
var osgblast = require("../");

var config_path;
if (process.argv.length == 3) {
    config_path = process.argv[2];
} else {
    console.log("config.json path not specified.. using local directory");
    config_path = "config.json";
}
config_path = path.resolve(config_path);

if(!fs.existsSync(config_path)) {
    console.log("failed to find config:"+config_path);
    process.exit(2);
}

var config = require(config_path);

//set rundir if it's not set
if(!config.rundir) {
    var rundir = path.dirname(config_path);
    config.rundir = rundir;
}

//set user if it's not set
if(!config.user) {
    config.user = process.getuid();
}

//create pid
fs.writeFile(config.rundir+"/pid.txt", process.pid.toString());

process.on('uncaughtException', function(err) {
    console.log('osg-blast: Caught exception: ' + err+"\n");
    //console.trace(err);
    if(config.oplog) {
        fs.appendFile(config.oplog, "osg-blast: uncaughtException\n"+err);
    }
});

var prev_status;
function status(status, message) {
    if(status == null) {
        status = prev_status;
    } 
    fs.writeFileSync(config.rundir+"/status.txt", status+"\n"+message+"\n");
    var d = new Date();
    console.log(status + " :: " + d.toString() + " :: " + message); //no newline?
    prev_status = status;
}

osgblast.run(config, status).then(function() {
    console.log("workflow completed successfully\n");
    process.exit(0);
}).catch(function(err) {
    console.log("workflow threw exception:"+err+"\n");
    process.exit(1);
}).done();

//remove all jobs on all workflows
process.on('SIGINT', function(code) {
    console.log("osg-blast received SIGINT(ctrl+c)");
    process.exit(code);
});
process.on('SIGTERM', function(code) {
    console.log("osg-blast received SIGTERM(kill)");
    process.exit(code);
});

